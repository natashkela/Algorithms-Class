Name: <Nata Vacheishvili>

Question 1 : Stack Experiments 

1.( sqrt ( 6 ) ) : stepped through it with a debugger and thros and EmptyStackException on line 27 -> String op = ops.pop()

2.2 + 3 returns 3.0 (double). Happening because of else statement on line 37. Needed to terminate it with Ctrl+C, 
because it would never terminate itself. I think it gives us back what was last pushed and it does not give us the sum, 
because 2 + 3 is not in parenthesis. I checked if it would work with parenthesis and it worked just fine.

3.It is similar case here as it was in 2 + 3, now it is outputting 5.0 (double). Probably because it was last pushed onto the stack and 
in else statement we parse it to double so its outputting 5.0. If it was in parenthesis this would work fine too.

4.sqrt ( 12 + 4 ) returns double 16.0, which means that it adds up 12+4 because they are in parenthesis and then goes and turns it into 
double and prints it out.

6.( sqrt ( e * pi ) ) Works just fine, but I needed to terminate it with Ctrl+C

Question 2 : Programming Exercise

2. The formula here in the worst case would be M + N, where M are for rows and N for columns. so For 5X7 it would be 12.

Question 3 : Stack Exercises

1. pop deletes one element from the array, so maximum number of array locations inspected by pop would be one.

2. push adds one element to the array, so maximum number of array locations inspected by push would be one.

3. Because the maximum number in stack is N and the tokens are 3N, if we begin by entering N elements in the array 
 and then consecutively popping N elements again, and then refilling them again with N, we would get full Stack in the end, with
 N elements in it, which was done by 3N input string. There is no way we could enter more then N consecutive dashes and not get the 
 Exception, because there is never going to be more elements in the stack then N.

4.Because stack size is N and the formatted input string contains #N tokens, the minimum number of - that should appear is N.
For example if we had N=1, and we had to have input string of 3N, if we entered a - b, we would satisfy the requirements. Therefore,
the answer is N.

5. 3N-N=2N, because we need to enter minimum N dashes and return the full stack.

Question 4 : Binary Search Exercise 

2. The worst case formula in terms of K and N would be: K*N/2+(K+1)

